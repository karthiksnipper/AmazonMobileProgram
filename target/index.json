[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-08-24T20:24:53.990Z",
        "before": [
          {
            "result": {
              "duration": 6565479300,
              "status": "passed"
            },
            "match": {
              "location": "mock.stepdefinition.Hooks.beforeScenario()"
            }
          }
        ],
        "line": 3,
        "name": "Validating the product added to the cart, filter functions with rating",
        "description": "",
        "id": "validating-the-price-filter-function-of-the-application;validating-the-product-added-to-the-cart--filter-functions-with-rating",
        "after": [
          {
            "result": {
              "duration": 344078300,
              "status": "passed"
            },
            "match": {
              "location": "mock.stepdefinition.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 997000,
              "status": "passed"
            },
            "line": 4,
            "name": "Launch the browser",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.launch_the_browser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.lang.NoSuchMethodError: org.apache.logging.log4j.LogBuilder.log(Ljava/lang/String;Ljava/lang/Object;)V\r\n\tat org.apache.poi.openxml4j.opc.PackageRelationshipCollection.parseRelationshipsPart(PackageRelationshipCollection.java:309)\r\n\tat org.apache.poi.openxml4j.opc.PackageRelationshipCollection.\u003cinit\u003e(PackageRelationshipCollection.java:160)\r\n\tat org.apache.poi.openxml4j.opc.PackageRelationshipCollection.\u003cinit\u003e(PackageRelationshipCollection.java:130)\r\n\tat org.apache.poi.openxml4j.opc.PackagePart.loadRelationships(PackagePart.java:565)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.getParts(OPCPackage.java:751)\r\n\tat org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:322)\r\n\tat org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.\u003cinit\u003e(XSSFWorkbook.java:290)\r\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.\u003cinit\u003e(XSSFWorkbook.java:286)\r\n\tat mock.baseclass.BaseClass.readFromExcell(BaseClass.java:184)\r\n\tat mock.pages.GooglePage.searchTheAmazon(GooglePage.java:163)\r\n\tat mock.stepdefinition.AmazonStepDefintions.user_Search_amazon_on_searchbar(AmazonStepDefintions.java:22)\r\n\tat âœ½.user Search amazon on searchbar(file:///D:/softwares/Java%20kits/Modified/m-workspace/MockAmazon/src/test/resources/Features/Amazon.feature:5)\r\n",
              "duration": 164559400,
              "status": "failed"
            },
            "line": 5,
            "name": "user Search amazon on searchbar",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Search_amazon_on_searchbar()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 6,
            "name": "user Print list of search result",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Print_list_of_search_result()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "user Clicks on amazon application",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Clicks_on_amazon_application()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "user Enter valid credentials",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Enter_valid_credentials()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user selects Electronic button through all button in searchbar",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_selects_Electronic_button_through_all_button_in_searchbar()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "user Enters dell computers",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Enters_dell_computers()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user Applies filter range rs30000 to rs50000",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Applies_filter_range_rs30000_to_rs50000()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "user Validates the result first two pages in the range of rs30000 to rs50000",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Validates_the_result_first_two_pages_in_the_range_of_rs30000_to_rs50000()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user Prints rating5 rating from result on two pages",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Prints_rating5_rating_from_result_on_two_pages()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "user Add the the selected rating5 product in wish list",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_Add_the_the_selected_rating5_product_in_wish_list()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "user validating the product added in the wish list",
            "match": {
              "location": "mock.stepdefinition.AmazonStepDefintions.user_validating_the_product_added_in_the_wish_list()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@TC-1"
          }
        ]
      }
    ],
    "name": "Validating the price filter function of the application",
    "description": "",
    "id": "validating-the-price-filter-function-of-the-application",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/Amazon.feature",
    "tags": []
  }
]